import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Scanner;

public class Problem22 {

	public static void main(String[] args) throws FileNotFoundException {
		// TODO Auto-generated method stub
		String out="C:\\Users\\Amit Chandra Sarkar\\Desktop\\OutPut\\out.out";
		String in="C:\\Users\\Amit Chandra Sarkar\\Desktop\\OutPut\\input.in";
		PrintWriter output =new PrintWriter(out);
		
		Scanner sc=new Scanner(new File(in));
		int mod =1000000007;
		int T=sc.nextInt();
		sc.nextLine();
		for(int t=1;t<=T;t++){
		int A=sc.nextInt();
		int B=sc.nextInt();
		long N=sc.nextLong();
		int K=sc.nextInt();
		BigInteger pairs=BigInteger.ZERO;

			for(long i=1;i<N;i++){
				for(long j=i+1;j<=N;j++){
					if(((pow(i,A,mod)+pow(j,B,mod))%mod)%K==0){
						pairs=pairs.add(BigInteger.ONE);
					}
					if(((pow(j,A,mod)+pow(i,B,mod))%mod)%K==0){
						pairs=pairs.add(BigInteger.ONE);
					}
				}
				
			}
			
			output.println("Case #"+t+": "+pairs.mod(mod));
			output.flush();
		}
		output.flush();
	

	}
	static long pow(long i,long j,int mod){
		if(j==0)return 1%mod;
		long x=pow(i,j/2,mod);
		x=(x*x)%mod;
		if(j%2==1)
			x=(x*i)%mod;
		return x;
		
	}

}
