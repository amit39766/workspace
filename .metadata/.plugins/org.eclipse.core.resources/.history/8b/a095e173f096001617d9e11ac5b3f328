import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.StringTokenizer;

public class KickTheFootball {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		FastScanner sc=new FastScanner();
		int T=sc.nextInt();
		for(int t=1;t<=T;t++){
			double v0=sc.nextDouble();
			double ang=Math.toRadians(sc.nextDouble());
			//double check=Math.toDegrees(Math.sin(ang));
			
			int n=sc.nextInt();
			//double maxLength=(v0*v0*Math.sin(2*ang))/9.8;
			//double maxHeight=(v0*v0*Math.sin(ang)*Math.sin(ang))/(2*9.8);
			//ArrayList<Players> players=new ArrayList<>();
			boolean flag=false;
			double vx=v0*Math.cos(ang);
			double vy=v0*Math.sin(ang);
			String playerName="";
			for(int i=0;i<n;i++){
				
				if(!flag){
					int x=sc.nextInt();
					int y1=sc.nextInt();
					int y2=sc.nextInt();
					String name=sc.nextToken();
					double sec=x/vx;
					double y=sec*(vy-(0.5*9.8*sec));
					if(y>=y1&&y<=y2){
						flag=true;
						playerName=name;
						
					}
				}else{
					sc.nextToken();
				}
			}
			System.out.println((flag)?"Case "+t+": Ball is received by "+playerName:"Case "+t+": No one received the ball");
		}

	}

}
//No need. plan have been changed
/*
class Players{
	String name;
	int x1;
	int y1;
	int y2;
	public Players(String name,int x1,int y1,int y2) {
		// TODO Auto-generated constructor stub
		this.name=name;
		this.x1=x1;
		this.y1=y1;
		this.y2=y2;
	}
}
*/
class FastScanner {
	BufferedReader br;
	StringTokenizer st;

	public FastScanner(String s) {
		try {
			br = new BufferedReader(new FileReader(s));
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public FastScanner() {
		br = new BufferedReader(new InputStreamReader(System.in));
	}

	String nextToken() {
		while (st == null || !st.hasMoreElements()) {
			try {
				st = new StringTokenizer(br.readLine());
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		return st.nextToken();
	}

	int nextInt() {
		return Integer.parseInt(nextToken());
	}

	long nextLong() {
		return Long.parseLong(nextToken());
	}

	double nextDouble() {
		return Double.parseDouble(nextToken());
	}
}
