import java.util.Arrays;
import java.util.LinkedList;
import java.util.Scanner;

public class SixN_Cryption {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc=new Scanner(System.in);
		int dummy=1;
		while(sc.hasNext()){
			if(dummy>1){
				sc.nextLine();
				dummy++;
			}
			int en=sc.nextInt();
			int n=sc.nextInt();
			long num[]=new long[n];
			for(int k=0;k<n;k++){
				num[k]=sc.nextLong();
				sc.nextLine();
			}
			//Arrays.sort(num);
			long bigPrime=primeFactors(num[0]);
			long sum=0;
			for(int i=0;i<n;i++){
				sum+=num[i]/bigPrime;
			}
			System.out.println("Output: "+(en-sum));
			
			
		}

	}
	private static long primeFactors(long x){
		long bigPrime=0;
		   for(long i=2L; i<=x; i++){
		        for(long l=1L; l<=Math.sqrt(i); l++){
		            if(l%i==0){
		                break;
		            } else{
		                while(x%i==0){
		                    x=x/i;
		                    bigPrime =i;
		                }
		            }
		        }
		    }
		    return bigPrime;
	}

}
