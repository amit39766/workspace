import java.util.ArrayList;
import java.util.Scanner;

public class Problem2 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc=new Scanner(System.in);
		long mod =1000000007;
		int T=sc.nextInt();
		for(int t=1;t<=T;t++){
		long A=sc.nextLong();
		long B=sc.nextLong();
		long N=sc.nextLong();
		int K=sc.nextInt();

			long pairs=0;
			for(long i=1;i<N;i++){
				for(long j=i+1;j<=N;j++){
					if(((power(i, A,mod)+power(j, B,mod))%mod)%K==0){
						pairs=(pairs+1)%mod;
					}
					if(((power(j, A,mod)+power(i, B,mod))%mod)%K==0){
						pairs=(pairs+1)%mod;
					}
				}
				
			}
			
			System.out.println("Case #"+t+": "+pairs);
		}
	

	}
	static long power(long x,long y,long mod){
		  long t=1;
		  while(y>0){
		    if(y%2==0){
		    	y-=1;
		    	t=t*x%mod;
		    }
		    	
		    else {
		    	y/=2;
		    	x=x*x%mod;
		    }
		    	
		  }
		  return t%mod;
		}

}

/*import java.math.BigInteger;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Scanner;

public class Problem2 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc=new Scanner(System.in);
		BigInteger mod =new BigInteger("1000000007");
		int T=sc.nextInt();
		for(int t=1;t<=T;t++){
		double A=sc.nextDouble();
		double B=sc.nextDouble();
		long N=sc.nextLong();
		int K=sc.nextInt();

			BigInteger pairs=BigInteger.ZERO;
			for(long i=1;i<N;i++){
				for(long j=i+1;j<=N;j++){
					if((Math.pow(i, A)+Math.pow(j, B))%K==0){
						pairs=pairs.add(BigInteger.ONE);
					}
					if((Math.pow(j, A)+Math.pow(i, B))%K==0){
						pairs=pairs.add(BigInteger.ONE);
					}
				}
				
			}
			
			System.out.println("Case #"+t+": "+pairs.mod(mod));
		}
	

	}

}
*/